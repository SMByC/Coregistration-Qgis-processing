name: Extralibs Packaging

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Conda
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          choco install miniconda3 -y -params '/AddToPath:1 /D:\<installation_path>'
          export PATH="$PATH:<installation_path>"
        elif [ "$RUNNER_OS" == "macOS" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
          bash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
        elif [ "$RUNNER_OS" == "Linux" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
          bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
        fi
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda

    - name: Create Conda environment and install libraries
      run: |
        conda create -n myenv python=${{ matrix.python-version }} -y
        conda activate myenv
        conda install -c conda-forge gdal -y

    - name: Zip Conda environment
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          7z a conda_env.zip $CONDA_PREFIX
        else
          zip -r conda_env.zip $CONDA_PREFIX
        fi

    - name: Upload Conda environment artifact
      uses: actions/upload-artifact@v2
      with:
        name: conda-environment
        path: conda_env.zip
